// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EnvVisualizer component renders correctly 1`] = `
"<Provider store={{...}}>
  <Connect(SideContentEnvVisualizer) workspaceLocation=\\"playground\\">
    <SideContentEnvVisualizer workspaceLocation=\\"playground\\" numOfStepsTotal={0} numOfSteps={-1} breakpointSteps={{...}} needEnvUpdate={true} handleEditorEval={[Function (anonymous)]} handleEnvStepUpdate={[Function (anonymous)]} setEditorHighlightedLines={[Function (anonymous)]}>
      <HotKeysEnabled keyMap={{...}} handlers={{...}}>
        <HotKeysWrapper hotKeys={{...}}>
          <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" onKeyDown={[Function: bound _handleKeyDown]} onKeyPress={[Function: bound _handleKeyPress]} onKeyUp={[Function: bound _handleKeyUp]}>
            <div className=\\"bp4-dark\\">
              <div className=\\"sa-substituter\\" style={{...}}>
                <Blueprint4.Slider disabled={true} min={1} max={0} onChange={[Function (anonymous)]} onRelease={[Function (anonymous)]} value={1} showTrackFill={true} stepSize={1} vertical={false} initialValue={0} intent=\\"primary\\">
                  <Blueprint4.MultiSlider disabled={true} min={1} max={0} showTrackFill={true} stepSize={1} vertical={false} defaultTrackIntent=\\"none\\">
                    <div className=\\"bp4-slider bp4-disabled\\" onMouseDown={[Function (anonymous)]} onTouchStart={[Function (anonymous)]}>
                      <div className=\\"bp4-slider-track\\">
                        <div className=\\"bp4-slider-progress\\" style={{...}} />
                        <div className=\\"bp4-slider-progress bp4-intent-primary\\" style={{...}} />
                        <div className=\\"bp4-slider-progress\\" style={{...}} />
                      </div>
                      <div className=\\"bp4-slider-axis\\" />
                      <Blueprint4.SliderHandle htmlProps={[undefined]} className=\\"\\" disabled={true} label=\\"1\\" max={0} min={1} onChange={[Function (anonymous)]} onRelease={[Function (anonymous)]} stepSize={1} tickSize={-0} tickSizeRatio={-1} value={1} vertical={false}>
                        <span role=\\"slider\\" tabIndex={0} className=\\"bp4-slider-handle\\" onKeyDown={[undefined]} onKeyUp={[undefined]} onMouseDown={[undefined]} onTouchStart={[undefined]} style={{...}} aria-valuemin={1} aria-valuemax={0} aria-valuenow={1} aria-orientation=\\"horizontal\\">
                          <span className=\\"bp4-slider-label\\">
                            1
                          </span>
                        </span>
                      </Blueprint4.SliderHandle>
                    </div>
                  </Blueprint4.MultiSlider>
                </Blueprint4.Slider>
                <div style={{...}}>
                  <Blueprint4.ButtonGroup>
                    <div className=\\"bp4-button-group\\">
                      <Blueprint4.Tooltip2 content=\\"Agenda and Stash\\" compact={true} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                        <Tooltip2Provider>
                          <Blueprint4.Popover2 modifiers={{...}} content=\\"Agenda and Stash\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2 bp4-compact\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                            <Manager>
                              <Reference>
                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                  <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                    <Blueprint4.AnchorButton onMouseUp={[Function: onMouseUp]} icon=\\"layers\\" disabled={true} className=\\"\\" tabIndex={0}>
                                      <a role=\\"button\\" onMouseUp={[Function: onMouseUp]} disabled={true} className=\\"bp4-button bp4-disabled\\" tabIndex={-1} onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} href={[undefined]}>
                                        <Blueprint4.Icon icon=\\"layers\\">
                                          <span aria-hidden={true} icon=\\"layers\\" className=\\"bp4-icon bp4-icon-layers\\" title={[undefined]}>
                                            <svg fill={[undefined]} data-icon=\\"layers\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                              <path d=\\"M.55 4.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3a.998.998 0 00-.06-1.81L8.4.08a1.006 1.006 0 00-.79 0l-6.99 3a.992.992 0 00-.07 1.81zM15 11c-.16 0-.31.04-.45.11L8 14l-6.55-2.9c-.14-.06-.29-.1-.45-.1-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1zm0-4c-.16 0-.31.04-.45.11L8 10 1.45 7.11A.997.997 0 001 7c-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                            </svg>
                                          </span>
                                        </Blueprint4.Icon>
                                        <span className=\\"bp4-button-text\\">
                                          <Blueprint4.Checkbox checked={false} disabled={false}>
                                            <Control checked={false} disabled={false} inputRef={[Function (anonymous)]} onChange={[Function (anonymous)]} type=\\"checkbox\\" typeClassName=\\"bp4-checkbox\\">
                                              <label className=\\"bp4-control bp4-checkbox\\" style={[undefined]}>
                                                <input checked={false} disabled={false} onChange={[Function (anonymous)]} type=\\"checkbox\\" />
                                                <span className=\\"bp4-control-indicator\\" />
                                              </label>
                                            </Control>
                                          </Blueprint4.Checkbox>
                                        </span>
                                        <Blueprint4.Icon icon={[undefined]} />
                                      </a>
                                    </Blueprint4.AnchorButton>
                                  </span>
                                </Blueprint4.ResizeSensor2>
                              </Reference>
                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                              </Popper>
                            </Manager>
                          </Blueprint4.Popover2>
                        </Tooltip2Provider>
                      </Blueprint4.Tooltip2>
                      <Blueprint4.Tooltip2 content=\\"Truncate Agenda\\" compact={true} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                        <Tooltip2Provider>
                          <Blueprint4.Popover2 modifiers={{...}} content=\\"Truncate Agenda\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2 bp4-compact\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                            <Manager>
                              <Reference>
                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                  <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                    <Blueprint4.AnchorButton onMouseUp={[Function: onMouseUp]} icon=\\"minimize\\" disabled={true} className=\\"\\" tabIndex={0}>
                                      <a role=\\"button\\" onMouseUp={[Function: onMouseUp]} disabled={true} className=\\"bp4-button bp4-disabled\\" tabIndex={-1} onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} href={[undefined]}>
                                        <Blueprint4.Icon icon=\\"minimize\\">
                                          <span aria-hidden={true} icon=\\"minimize\\" className=\\"bp4-icon bp4-icon-minimize\\" title={[undefined]}>
                                            <svg fill={[undefined]} data-icon=\\"minimize\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                              <path d=\\"M15.99.99a1.003 1.003 0 00-1.71-.71l-3.29 3.29V1.99c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H12.4l3.3-3.29c.18-.18.29-.43.29-.71zm-10 8h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.29 14.28a1.003 1.003 0 001.42 1.42L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4a1.02 1.02 0 00-1.01-1.01z\\" fillRule=\\"evenodd\\" />
                                            </svg>
                                          </span>
                                        </Blueprint4.Icon>
                                        <span className=\\"bp4-button-text\\">
                                          <Blueprint4.Checkbox checked={false} disabled={true}>
                                            <Control checked={false} disabled={true} inputRef={[Function (anonymous)]} onChange={[Function (anonymous)]} type=\\"checkbox\\" typeClassName=\\"bp4-checkbox\\">
                                              <label className=\\"bp4-control bp4-checkbox bp4-disabled\\" style={[undefined]}>
                                                <input checked={false} disabled={true} onChange={[Function (anonymous)]} type=\\"checkbox\\" />
                                                <span className=\\"bp4-control-indicator\\" />
                                              </label>
                                            </Control>
                                          </Blueprint4.Checkbox>
                                        </span>
                                        <Blueprint4.Icon icon={[undefined]} />
                                      </a>
                                    </Blueprint4.AnchorButton>
                                  </span>
                                </Blueprint4.ResizeSensor2>
                              </Reference>
                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                              </Popper>
                            </Manager>
                          </Blueprint4.Popover2>
                        </Tooltip2Provider>
                      </Blueprint4.Tooltip2>
                    </div>
                  </Blueprint4.ButtonGroup>
                  <Blueprint4.ButtonGroup>
                    <div className=\\"bp4-button-group\\">
                      <Blueprint4.Button disabled={true} icon=\\"double-chevron-left\\" onClick={[Function (anonymous)]}>
                        <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                          <Blueprint4.Icon icon=\\"double-chevron-left\\">
                            <span aria-hidden={true} icon=\\"double-chevron-left\\" className=\\"bp4-icon bp4-icon-double-chevron-left\\" title={[undefined]}>
                              <svg fill={[undefined]} data-icon=\\"double-chevron-left\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                <path d=\\"M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z\\" fillRule=\\"evenodd\\" />
                              </svg>
                            </span>
                          </Blueprint4.Icon>
                          <Blueprint4.Icon icon={[undefined]} />
                        </button>
                      </Blueprint4.Button>
                      <Blueprint4.Button disabled={true} icon=\\"chevron-left\\" onClick={[Function (anonymous)]}>
                        <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                          <Blueprint4.Icon icon=\\"chevron-left\\">
                            <span aria-hidden={true} icon=\\"chevron-left\\" className=\\"bp4-icon bp4-icon-chevron-left\\" title={[undefined]}>
                              <svg fill={[undefined]} data-icon=\\"chevron-left\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                <path d=\\"M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z\\" fillRule=\\"evenodd\\" />
                              </svg>
                            </span>
                          </Blueprint4.Icon>
                          <Blueprint4.Icon icon={[undefined]} />
                        </button>
                      </Blueprint4.Button>
                      <Blueprint4.Button disabled={true} icon=\\"chevron-right\\" onClick={[Function (anonymous)]}>
                        <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                          <Blueprint4.Icon icon=\\"chevron-right\\">
                            <span aria-hidden={true} icon=\\"chevron-right\\" className=\\"bp4-icon bp4-icon-chevron-right\\" title={[undefined]}>
                              <svg fill={[undefined]} data-icon=\\"chevron-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                <path d=\\"M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z\\" fillRule=\\"evenodd\\" />
                              </svg>
                            </span>
                          </Blueprint4.Icon>
                          <Blueprint4.Icon icon={[undefined]} />
                        </button>
                      </Blueprint4.Button>
                      <Blueprint4.Button disabled={true} icon=\\"double-chevron-right\\" onClick={[Function (anonymous)]}>
                        <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                          <Blueprint4.Icon icon=\\"double-chevron-right\\">
                            <span aria-hidden={true} icon=\\"double-chevron-right\\" className=\\"bp4-icon bp4-icon-double-chevron-right\\" title={[undefined]}>
                              <svg fill={[undefined]} data-icon=\\"double-chevron-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                <path d=\\"M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z\\" fillRule=\\"evenodd\\" />
                              </svg>
                            </span>
                          </Blueprint4.Icon>
                          <Blueprint4.Icon icon={[undefined]} />
                        </button>
                      </Blueprint4.Button>
                    </div>
                  </Blueprint4.ButtonGroup>
                  <Blueprint4.ButtonGroup>
                    <div className=\\"bp4-button-group\\">
                      <Blueprint4.Tooltip2 content=\\"Experimental\\" compact={true} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                        <Tooltip2Provider>
                          <Blueprint4.Popover2 modifiers={{...}} content=\\"Experimental\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2 bp4-compact\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                            <Manager>
                              <Reference>
                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                  <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                    <Blueprint4.AnchorButton onMouseUp={[Function: onMouseUp]} icon=\\"build\\" disabled={true} className=\\"\\" tabIndex={0}>
                                      <a role=\\"button\\" onMouseUp={[Function: onMouseUp]} disabled={true} className=\\"bp4-button bp4-disabled\\" tabIndex={-1} onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} href={[undefined]}>
                                        <Blueprint4.Icon icon=\\"build\\">
                                          <span aria-hidden={true} icon=\\"build\\" className=\\"bp4-icon bp4-icon-build\\" title={[undefined]}>
                                            <svg fill={[undefined]} data-icon=\\"build\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                              <path d=\\"M15.39 12.41L7.7 6l1.07-1.1c.34-.34-.12-.63.12-1.26.88-2.17 3.41-2.35 3.41-2.35s.36-.37.71-.72C9.74-.81 7.53.53 6.54 1.4L3.12 4.9l-.71.72c-.39.4-.39 1.05 0 1.45l-.7.72c-.39-.4-1.02-.4-1.41 0s-.39 1.05 0 1.45l1.41 1.45c.39.4 1.02.4 1.41 0s.39-1.05 0-1.45l.71-.72c.39.4 1.02.4 1.41 0l.8-.82 6.39 7.67c.82.82 2.14.82 2.96 0 .81-.82.81-2.15 0-2.96z\\" fillRule=\\"evenodd\\" />
                                            </svg>
                                          </span>
                                        </Blueprint4.Icon>
                                        <span className=\\"bp4-button-text\\">
                                          <Blueprint4.Checkbox checked={false}>
                                            <Control checked={false} inputRef={[Function (anonymous)]} onChange={[Function (anonymous)]} type=\\"checkbox\\" typeClassName=\\"bp4-checkbox\\">
                                              <label className=\\"bp4-control bp4-checkbox\\" style={[undefined]}>
                                                <input checked={false} onChange={[Function (anonymous)]} type=\\"checkbox\\" />
                                                <span className=\\"bp4-control-indicator\\" />
                                              </label>
                                            </Control>
                                          </Blueprint4.Checkbox>
                                        </span>
                                        <Blueprint4.Icon icon={[undefined]} />
                                      </a>
                                    </Blueprint4.AnchorButton>
                                  </span>
                                </Blueprint4.ResizeSensor2>
                              </Reference>
                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                              </Popper>
                            </Manager>
                          </Blueprint4.Popover2>
                        </Tooltip2Provider>
                      </Blueprint4.Tooltip2>
                      <Blueprint4.Tooltip2 content=\\"Print\\" compact={true} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                        <Tooltip2Provider>
                          <Blueprint4.Popover2 modifiers={{...}} content=\\"Print\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2 bp4-compact\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                            <Manager>
                              <Reference>
                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                  <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                    <Blueprint4.AnchorButton onMouseUp={[Function: onMouseUp]} icon=\\"print\\" disabled={true} className=\\"\\" tabIndex={0}>
                                      <a role=\\"button\\" onMouseUp={[Function: onMouseUp]} disabled={true} className=\\"bp4-button bp4-disabled\\" tabIndex={-1} onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} href={[undefined]}>
                                        <Blueprint4.Icon icon=\\"print\\">
                                          <span aria-hidden={true} icon=\\"print\\" className=\\"bp4-icon bp4-icon-print\\" title={[undefined]}>
                                            <svg fill={[undefined]} data-icon=\\"print\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                              <path d=\\"M12 2.02c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h8v-1zm3 2H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1v-3h12v3h1c.55 0 1-.45 1-1v-6c0-.56-.45-1-1-1zm-1 3h-2v-1h2v1zm-3 6H5v-3H3v4c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-4h-2v3z\\" fillRule=\\"evenodd\\" />
                                            </svg>
                                          </span>
                                        </Blueprint4.Icon>
                                        <span className=\\"bp4-button-text\\">
                                          <Blueprint4.Checkbox checked={false}>
                                            <Control checked={false} inputRef={[Function (anonymous)]} onChange={[Function (anonymous)]} type=\\"checkbox\\" typeClassName=\\"bp4-checkbox\\">
                                              <label className=\\"bp4-control bp4-checkbox\\" style={[undefined]}>
                                                <input checked={false} onChange={[Function (anonymous)]} type=\\"checkbox\\" />
                                                <span className=\\"bp4-control-indicator\\" />
                                              </label>
                                            </Control>
                                          </Blueprint4.Checkbox>
                                        </span>
                                        <Blueprint4.Icon icon={[undefined]} />
                                      </a>
                                    </Blueprint4.AnchorButton>
                                  </span>
                                </Blueprint4.ResizeSensor2>
                              </Reference>
                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                              </Popper>
                            </Manager>
                          </Blueprint4.Popover2>
                        </Tooltip2Provider>
                      </Blueprint4.Tooltip2>
                      <Blueprint4.Tooltip2 content=\\"Save\\" compact={true} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                        <Tooltip2Provider>
                          <Blueprint4.Popover2 modifiers={{...}} content=\\"Save\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2 bp4-compact\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                            <Manager>
                              <Reference>
                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                  <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                    <Blueprint4.AnchorButton icon=\\"floppy-disk\\" disabled={true} onClick={[Function (anonymous)]} className=\\"\\" tabIndex={0}>
                                      <a role=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" tabIndex={-1} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} href={[undefined]}>
                                        <Blueprint4.Icon icon=\\"floppy-disk\\">
                                          <span aria-hidden={true} icon=\\"floppy-disk\\" className=\\"bp4-icon bp4-icon-floppy-disk\\" title={[undefined]}>
                                            <svg fill={[undefined]} data-icon=\\"floppy-disk\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                              <path d=\\"M15.71 2.29l-2-2A.997.997 0 0013 0h-1v6H4V0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.28-.11-.53-.29-.71zM14 15H2V9c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v6zM11 1H9v4h2V1z\\" fillRule=\\"evenodd\\" />
                                            </svg>
                                          </span>
                                        </Blueprint4.Icon>
                                        <Blueprint4.Icon icon={[undefined]} />
                                      </a>
                                    </Blueprint4.AnchorButton>
                                  </span>
                                </Blueprint4.ResizeSensor2>
                              </Reference>
                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                              </Popper>
                            </Manager>
                          </Blueprint4.Popover2>
                        </Tooltip2Provider>
                      </Blueprint4.Tooltip2>
                    </div>
                  </Blueprint4.ButtonGroup>
                </div>
              </div>
              <br />
              <div id=\\"env-visualizer-default-text\\" className=\\"bp4-running-text\\">
                The environment model visualizer generates environment model diagrams following a notation introduced in
                 
                <a href=\\"https://sourceacademy.org/sicpjs/3.2\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\">
                  <i>
                    Structure and Interpretation of Computer Programs, JavaScript Edition, Chapter 3, Section 2
                  </i>
                </a>
                .
                <br />
                <br />
                 On this tab, the REPL will be hidden from view, so do check that your code has no errors before running the stepper. You may use this tool by running your program and then dragging the slider above to see the state of the environment at different stages in the evaluation of your program. Clicking on the fast-forward button (double chevron) will take you to the next breakpoint in your program.
                <br />
                <br />
                <Blueprint4.Divider>
                  <div className=\\"bp4-divider\\" />
                </Blueprint4.Divider>
                Some useful keyboard shortcuts:
                <br />
                <br />
                a: Move to the first step
                <br />
                e: Move to the last step
                <br />
                f: Move to the next step
                <br />
                b: Move to the previous step
                <br />
                <br />
                Note that these shortcuts are only active when the browser focus is on this tab.
              </div>
            </div>
          </div>
        </HotKeysWrapper>
      </HotKeysEnabled>
    </SideContentEnvVisualizer>
  </Connect(SideContentEnvVisualizer)>
</Provider>"
`;
